version: "3.9"

services:
  web:
    build: 
      context: .
    container_name: django_app
    entrypoint: ["/app/entrypoint.sh"]
    command: ["gunicorn", "--bind", "0.0.0.0:8000", "tabdeal_code_challenge.wsgi:application"]
    volumes:
      - .:/app 
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      - DEBUG=0
      - DATABASE_URL=postgresql://django:django@db:9090/django_db
      - REDIS_URL=redis://redis:8657/0
    restart: unless-stopped
    networks:
      - app-network

  db:
    image: postgres:14-alpine
    container_name: postgres_db
    environment:
      POSTGRES_USER: django
      POSTGRES_PASSWORD: django
      POSTGRES_DB: django_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "9090:5432"
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U django"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7.0-alpine
    container_name: redis_persistent
    ports:
      - "8657:6379"
    volumes:
      - redis_data:/data
      - ./configs/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge
